openapi: 3.0.0
x-stoplight:
  id: dryl7xx944a2c
info:
  title: teacherapi.v2
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/teachers/{teacherId}':
    parameters:
      - schema:
          type: string
        name: teacherId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Teacher Found
          content:
            application/json:
              schema:
                $ref: ./models/teacher.v1.yaml
              examples:
                example-1:
                  value:
                    id: 123e4567-e89b-12d3-a456-426614174000
                    school:
                      id: string
                    firstName: string
                    lastName: string
                    dob: '2019-08-24'
                    email: test@abc.com
                    phone: 999 999 999
        '404':
          description: Teacher Not Found
        '500':
          description: Internal Server Error
      operationId: get-teachers-teacherId
      description: Retrieve the information of the teacher using Teacher Id
    patch:
      summary: ''
      operationId: patch-teachers-teacherId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/teacher.v1.yaml
        '404':
          description: Teacher Not Found
        '409':
          description: Email already exist against other teacher
        '500':
          description: Internal Server Error
      description: Update the information of the existing teacher using Teacher Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/teacher.v1.yaml
            examples:
              Update First Name:
                value:
                  firstName: string
  /teacher:
    post:
      summary: ''
      operationId: post-teachers
      responses:
        '200':
          description: Teacher Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  '':
                    $ref: ./models/teacher.v1.yaml
        '400':
          description: Missing required information
        '409':
          description: Email already taker
        '500':
          description: Internal Server Error
      description: Create New Teacher
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/teacher.v1.yaml
            examples:
              example-1:
                value:
                  teacher:
                    id: 123e4567-e89b-12d3-a456-426614174000
                    school:
                      id: string
                    firstName: First Name
                    lastName: Last Name
                    dob: '2019-08-24'
                    email: test@abc.com
                    phone: 999 999 999
    parameters: []
  /teachers:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: List of Teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/teacher.v1.yaml
              examples:
                example-1:
                  value:
                    - id: 123e4567-e89b-12d3-a456-426614174000
                      school:
                        id: string
                      firstName: First Name
                      lastName: Last Name
                      dob: '2019-08-24'
                      email: test@abc.com
                      phone: 999 999 999
        '500':
          description: Internal Server Error
      operationId: get-teachers
      description: Get List of Teachers
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
